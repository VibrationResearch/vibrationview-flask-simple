from flask import Blueprint, jsonify, request
from vv_manager import extract_com_error_info, with_vv_connection,handle_binary_upload
from utils import DecodeStatusColor

MAX_CONTENT_LENGTH = 10 * 1024 * 1024  # 10 MB limit

opentest_bp = Blueprint('opentest', __name__)
@opentest_bp.route('/opentest', methods=['PUT'])

@with_vv_connection
def put_opentest(vv_instance):
    try:
        filename = request.args.get('filename')
        content_length = request.content_length

        if content_length is None:
            return jsonify({'Error': 'Missing Content-Length header'}), 411  # Length Required
        if content_length > MAX_CONTENT_LENGTH:
            return jsonify({'Error': 'File too large'}), 413  # Payload Too Large       binary_data = request.get_data()
        binary_data = request.get_data()
        result, error, status_code = handle_binary_upload(filename, binary_data)
        if error:
            return jsonify(error), status_code

        file_path = result['FilePath']

        vv_instance.OpenTest(file_path)

        status = vv_instance.Status()
        color = DecodeStatusColor(status)

        return jsonify({
            'Status': status,
            'Color': color,
            'File': file_path,
            'Size': result['Size']
        })

    except Exception as e:
        return jsonify(extract_com_error_info(e)), 500
